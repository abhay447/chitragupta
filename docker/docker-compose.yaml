version: '3'

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}

services:
  redis:
    image: redis:latest
    ports:
      - 6379:6379

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zookeeper


  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - 9000:9000
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERCONNECT=kafka:9092

  chitragupta_producer:
    image: com.chitragupta/chitragupta-producer:latest
    depends_on:
      - kafka
    environment:
      KAFKA_URL: kafka:9092
      REDIS_URL: redis://redis:6379/0
      MAX_USER_COUNT: 100 # 100 unique users
      MAX_EVENT_COUNT: 26 # represents letters A to Z
      EVENT_PRODUCE_SLEEP_MILLIS: 100 # sleep interval millis between two events

  chitragupta_enricher:
    image: com.chitragupta/chitragupta-enricher:latest
    depends_on:
      - kafka
      - redis
    environment:
      KAFKA_URL: kafka:9092
      REDIS_URL: redis://redis:6379/0

  chitragupta_persister:
    image: com.chitragupta/chitragupta-persister:latest
    depends_on:
      - kafka
      - chitragupta_enricher
    volumes:
      - /tmp:/tmp
    environment:
      KAFKA_URL: kafka:9092
      REDIS_URL: redis://redis:6379/0

  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  # Druid setup start
  coordinator:
    image: apache/druid:26.0.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:26.0.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:26.0.0
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment

  middlemanager:
    image: apache/druid:26.0.0
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:26.0.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment

    # Druid setup end